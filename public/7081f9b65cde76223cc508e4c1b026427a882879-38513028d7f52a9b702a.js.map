{"version":3,"file":"7081f9b65cde76223cc508e4c1b026427a882879-38513028d7f52a9b702a.js","mappings":"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","sources":["webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/gatsby-theme-portfolio-minimal/src/components/Icon/IconBehance.tsx","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/gatsby-theme-portfolio-minimal/src/components/Icon/IconExternal.tsx","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/gatsby-theme-portfolio-minimal/src/components/Icon/IconGithub.tsx","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/gatsby-theme-portfolio-minimal/src/components/Icon/IconHashnode.tsx","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/gatsby-theme-portfolio-minimal/src/components/Icon/IconLinkedIn.tsx","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/gatsby-theme-portfolio-minimal/src/components/Icon/IconMail.tsx","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/gatsby-theme-portfolio-minimal/src/components/Icon/IconMedium.tsx","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/gatsby-theme-portfolio-minimal/src/components/Icon/IconTwitter.tsx","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/gatsby-theme-portfolio-minimal/src/components/Icon/index.tsx","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/gatsby-theme-portfolio-minimal/src/components/SocialProfiles/configuration.ts","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/gatsby-theme-portfolio-minimal/src/components/SocialProfiles/index.tsx","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/gatsby-theme-portfolio-minimal/src/components/SocialProfiles/style.module.css","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/gatsby-theme-portfolio-minimal/src/sections/Hero/index.tsx","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/gatsby-theme-portfolio-minimal/src/sections/Hero/data.tsx","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/gatsby-theme-portfolio-minimal/src/hooks/useCalendlyWidget.tsx","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/gatsby-theme-portfolio-minimal/src/sections/Hero/style.module.css","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/gatsby-theme-portfolio-minimal/src/sections/Articles/index.tsx","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/gatsby-theme-portfolio-minimal/src/sections/About/index.tsx","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/gatsby-theme-portfolio-minimal/src/sections/About/data.tsx","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/gatsby-theme-portfolio-minimal/src/sections/About/style.module.css","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/gatsby-theme-portfolio-minimal/src/sections/Interests/index.tsx","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/gatsby-theme-portfolio-minimal/src/sections/Interests/data.tsx","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/gatsby-theme-portfolio-minimal/src/sections/Interests/style.module.css","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/gatsby-theme-portfolio-minimal/src/components/Project/index.tsx","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/gatsby-theme-portfolio-minimal/src/components/Project/style.module.css","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/gatsby-theme-portfolio-minimal/src/sections/Projects/index.tsx","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/gatsby-theme-portfolio-minimal/src/sections/Projects/data.tsx","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/gatsby-theme-portfolio-minimal/src/sections/Projects/style.module.css","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/gatsby-theme-portfolio-minimal/src/sections/Contact/index.tsx","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/gatsby-theme-portfolio-minimal/src/sections/Contact/data.tsx","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/gatsby-theme-portfolio-minimal/src/sections/Contact/style.module.css","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/gatsby-theme-portfolio-minimal/src/sections/Legal/index.tsx","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/gatsby-theme-portfolio-minimal/src/sections/Legal/data.tsx"],"sourcesContent":["import React from 'react';\n\ninterface IconBehanceProps {\n    color?: string;\n}\n\nexport function IconBehance(props: IconBehanceProps): React.ReactElement {\n    return (\n        <svg\n            version=\"1.1\"\n            role=\"img\"\n            fill={props.color || 'var(--primary-color)'}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            x=\"0px\"\n            y=\"0px\"\n            width=\"430.123px\"\n            height=\"430.123px\"\n            viewBox=\"0 0 430.123 430.123\"\n        >\n            <g>\n                <path\n                    id=\"Behance\"\n                    d=\"M388.432,119.12H280.659V92.35h107.782v26.77H388.432z M208.912,228.895\n            c6.954,10.771,10.429,23.849,10.429,39.203c0,15.878-3.918,30.122-11.889,42.704c-5.071,8.326-11.367,15.359-18.932,21.021\n            c-8.52,6.548-18.607,11.038-30.203,13.437c-11.633,2.403-24.224,3.617-37.787,3.617H0V81.247h129.25\n            c32.579,0.53,55.676,9.969,69.315,28.506c8.184,11.369,12.239,25.011,12.239,40.868c0,16.362-4.104,29.454-12.368,39.401\n            c-4.597,5.577-11.388,10.65-20.378,15.229C191.675,210.236,202.007,218.086,208.912,228.895z M61.722,186.76h56.632\n            c11.638,0,21.046-2.212,28.292-6.634c7.241-4.415,10.854-12.263,10.854-23.531c0-12.449-4.784-20.712-14.375-24.689\n            c-8.244-2.763-18.792-4.186-31.591-4.186H61.722V186.76z M162.953,264.275c0-13.902-5.682-23.513-17.023-28.67\n            c-6.342-2.931-15.29-4.429-26.763-4.536H61.722v71.322h56.556c11.619,0,20.612-1.521,27.102-4.694\n            C157.084,291.863,162.953,280.76,162.953,264.275z M428.419,220.736c1.302,8.756,1.891,21.46,1.652,38.065H290.493\n            c0.77,19.266,7.421,32.739,20.035,40.449c7.607,4.835,16.83,7.196,27.63,7.196c11.388,0,20.67-2.879,27.815-8.797\n            c3.893-3.137,7.327-7.565,10.296-13.152h51.16c-1.34,11.379-7.5,22.92-18.57,34.648c-17.151,18.641-41.205,27.988-72.097,27.988\n            c-25.52,0-48.011-7.883-67.533-23.592C249.772,307.777,240,282.211,240,246.746c0-33.257,8.773-58.712,26.378-76.43\n            c17.67-17.751,40.474-26.586,68.583-26.586c16.661,0,31.68,2.978,45.079,8.965c13.357,5.993,24.396,15.425,33.09,28.388\n            C420.998,192.499,426.058,205.699,428.419,220.736z M378.062,225.73c-0.938-13.322-5.386-23.405-13.395-30.296\n            c-7.943-6.91-17.866-10.379-29.706-10.379c-12.886,0-22.836,3.708-29.906,10.996c-7.118,7.273-11.547,17.161-13.362,29.68H378.062\n            L378.062,225.73z\"\n                />\n            </g>\n        </svg>\n    );\n}\n","import React from 'react';\n\ninterface IconExternalProps {\n    color?: string;\n}\n\nexport function IconExternal(props: IconExternalProps): React.ReactElement {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 194.818 194.818\"\n            x=\"0px\"\n            y=\"0px\"\n            role=\"img\"\n            fill={props.color || 'var(--primary-color)'}\n            width=\"194.818px\"\n            height=\"194.818px\"\n        >\n            <g>\n                <path\n                    d=\"M185.8,2.2l-56.6,0c-4.8,0-9,3.6-9.3,8.4c-0.3,5.2,3.8,9.6,9,9.6h13.5c8.1,0,12.1,9.7,6.4,15.4L78,106.2\n            c-3.6,3.6-3.8,9.6-0.1,13.1c1.7,1.7,4,2.5,6.2,2.5c2.3,0,4.6-0.9,6.4-2.6l70.9-70.9c5.7-5.7,15.4-1.7,15.4,6.4v13.1\n            c0,4.8,3.6,9,8.4,9.3c5.2,0.3,9.6-3.8,9.6-9v-57C194.8,6.2,190.8,2.2,185.8,2.2z\"\n                />\n                <path\n                    d=\"M147.7,77.3c-4.5,0.6-7.7,4.7-7.7,9.2c0,14.6,0,59.7,0,79.1c0,5-4.1,9-9,9H27c-5,0-9-4.1-9-9V61.7c0-5,4.1-9,9-9l84.4,0\n            c4.8,0,9-3.6,9.3-8.4c0.3-5.2-3.8-9.6-9-9.6H9c-5,0-9,4.1-9,9v139.9c0,5,4.1,9,9,9H149c5,0,9-4.1,9-9V86.2\n            C158,80.8,153.2,76.5,147.7,77.3z\"\n                />\n            </g>\n        </svg>\n    );\n}\n","import React from 'react';\n\ninterface IconGithubProps {\n    color?: string;\n}\n\nexport function IconGithub(props: IconGithubProps): React.ReactElement {\n    return (\n        <svg\n            version=\"1.1\"\n            role=\"img\"\n            fill={props.color || 'var(--primary-color)'}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            x=\"0px\"\n            y=\"0px\"\n            viewBox=\"262 -262 1024 1024\"\n        >\n            <path\n                d=\"M774-249.4c-282.9,0-512,229.1-512,512c0,226.6,146.6,417.9,350.1,485.8c25.6,4.5,35.2-10.9,35.2-24.3\n        c0-12.2-0.6-52.5-0.6-95.4c-128.6,23.7-161.9-31.4-172.2-60.2c-5.8-14.7-30.7-60.2-52.5-72.3c-17.9-9.6-43.5-33.3-0.6-33.9\n        c40.3-0.6,69.1,37.1,78.7,52.5c46.1,77.4,119.7,55.7,149.1,42.2c4.5-33.3,17.9-55.7,32.6-68.5c-113.9-12.8-233-57-233-252.8\n        c0-55.7,19.8-101.8,52.5-137.6c-5.1-12.8-23-65.3,5.1-135.7c0,0,42.9-13.4,140.8,52.5c41-11.5,84.5-17.3,128-17.3\n        c43.5,0,87,5.8,128,17.3c97.9-66.6,140.8-52.5,140.8-52.5c28.2,70.4,10.2,122.9,5.1,135.7c32.6,35.8,52.5,81.3,52.5,137.6\n        c0,196.5-119.7,240-233.6,252.8c18.6,16,34.6,46.7,34.6,94.7c0,68.5-0.6,123.5-0.6,140.8c0,13.4,9.6,29.4,35.2,24.3\n        c202.2-67.8,348.8-259.8,348.8-485.8C1286-20.2,1056.9-249.4,774-249.4z\"\n            />\n        </svg>\n    );\n}\n","import React from 'react';\n\ninterface IconHashnodeProps {\n    color?: string;\n}\n\nexport function IconHashnode(props: IconHashnodeProps): React.ReactElement {\n    return (\n        <svg\n            viewBox=\"0 0 24 24\"\n            height=\"48\"\n            width=\"48\"\n            focusable=\"false\"\n            role=\"img\"\n            fill={props.color || 'var(--primary-color)'}\n            xmlns=\"http://www.w3.org/2000/svg\"\n        >\n            <path d=\"m22.351 8.019-6.37-6.37a5.63 5.63 0 0 0-7.962 0l-6.37 6.37a5.63 5.63 0 0 0 0 7.962l6.37 6.37a5.63 5.63 0 0 0 7.962 0l6.37-6.37a5.63 5.63 0 0 0 0-7.962zM12 15.953a3.953 3.953 0 1 1 0-7.906 3.953 3.953 0 0 1 0 7.906z\"></path>\n        </svg>\n    );\n}\n","import React from 'react';\n\ninterface IconLinkedInProps {\n    color?: string;\n}\n\nexport function IconLinkedIn(props: IconLinkedInProps): React.ReactElement {\n    return (\n        <svg\n            version=\"1.1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            role=\"img\"\n            fill={props.color || 'var(--primary-color)'}\n            x=\"0px\"\n            y=\"0px\"\n            width=\"430.117px\"\n            height=\"430.117px\"\n            viewBox=\"0 0 430.117 430.117\"\n        >\n            <g>\n                <path\n                    d=\"M430.117,261.543V420.56h-92.188V272.193c0-37.271-13.334-62.707-46.703-62.707\n            c-25.473,0-40.632,17.142-47.301,33.724c-2.432,5.928-3.058,14.179-3.058,22.477V420.56h-92.219c0,0,1.242-251.285,0-277.32h92.21\n            v39.309c-0.187,0.294-0.43,0.611-0.606,0.896h0.606v-0.896c12.251-18.869,34.13-45.824,83.102-45.824\n            C384.633,136.724,430.117,176.361,430.117,261.543z M52.183,9.558C20.635,9.558,0,30.251,0,57.463\n            c0,26.619,20.038,47.94,50.959,47.94h0.616c32.159,0,52.159-21.317,52.159-47.94C103.128,30.251,83.734,9.558,52.183,9.558z\n             M5.477,420.56h92.184v-277.32H5.477V420.56z\"\n                />\n            </g>\n        </svg>\n    );\n}\n","import React from 'react';\n\ninterface IconMailProps {\n    color?: string;\n}\n\nexport function IconMail(props: IconMailProps): React.ReactElement {\n    return (\n        <svg\n            version=\"1.1\"\n            id=\"Mail\"\n            fill={props.color || 'var(--primary-color)'}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            x=\"0px\"\n            y=\"0px\"\n            viewBox=\"0 0 433.664 433.664\"\n        >\n            <g>\n                <g>\n                    <path\n                        d=\"M229.376,271.616c-4.096,2.56-8.704,3.584-12.8,3.584s-8.704-1.024-12.8-3.584L0,147.2v165.376c0,35.328,28.672,64,64,64\n                    h305.664c35.328,0,64-28.672,64-64V147.2L229.376,271.616z\"\n                    />\n                </g>\n            </g>\n            <g>\n                <g>\n                    <path\n                        d=\"M369.664,57.088H64c-30.208,0-55.808,21.504-61.952,50.176l215.04,131.072l214.528-131.072\n                    C425.472,78.592,399.872,57.088,369.664,57.088z\"\n                    />\n                </g>\n            </g>\n        </svg>\n    );\n}\n","import React from 'react';\n\ninterface IconMediumProps {\n    color?: string;\n}\n\nexport function IconMedium(props: IconMediumProps): React.ReactElement {\n    return (\n        <svg\n            version=\"1.1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            role=\"img\"\n            fill={props.color || 'var(--primary-color)'}\n            x=\"0px\"\n            y=\"0px\"\n            viewBox=\"-237 239 24 24\"\n        >\n            <path\n                d=\"M-234.2,245.9c0-0.3-0.1-0.6-0.3-0.8l-2.2-2.7V242h7l5.4,11.8l4.7-11.8h6.6v0.4l-1.9,1.8c-0.2,0.1-0.2,0.3-0.2,0.5v13.5\n        c0,0.2,0,0.4,0.2,0.5l1.9,1.8v0.4h-9.4v-0.4l1.9-1.9c0.2-0.2,0.2-0.2,0.2-0.5v-10.9l-5.4,13.7h-0.7l-6.3-13.7v9.2\n        c-0.1,0.4,0.1,0.8,0.3,1.1l2.5,3.1v0.4h-7.1v-0.4l2.5-3.1c0.3-0.3,0.4-0.7,0.3-1.1C-234.2,256.5-234.2,245.9-234.2,245.9z\"\n            />\n        </svg>\n    );\n}\n","import React from 'react';\n\ninterface IconTwitterProps {\n    color?: string;\n}\n\nexport function IconTwitter(props: IconTwitterProps): React.ReactElement {\n    return (\n        <svg\n            version=\"1.1\"\n            id=\"Mail\"\n            fill={props.color || 'var(--primary-color)'}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            x=\"0px\"\n            y=\"0px\"\n            viewBox=\"0 0 310 310\"\n        >\n            <g id=\"XMLID_826_\">\n                <path\n                    id=\"XMLID_827_\"\n                    d=\"M302.973,57.388c-4.87,2.16-9.877,3.983-14.993,5.463c6.057-6.85,10.675-14.91,13.494-23.73\n                c0.632-1.977-0.023-4.141-1.648-5.434c-1.623-1.294-3.878-1.449-5.665-0.39c-10.865,6.444-22.587,11.075-34.878,13.783\n                c-12.381-12.098-29.197-18.983-46.581-18.983c-36.695,0-66.549,29.853-66.549,66.547c0,2.89,0.183,5.764,0.545,8.598\n                C101.163,99.244,58.83,76.863,29.76,41.204c-1.036-1.271-2.632-1.956-4.266-1.825c-1.635,0.128-3.104,1.05-3.93,2.467\n                c-5.896,10.117-9.013,21.688-9.013,33.461c0,16.035,5.725,31.249,15.838,43.137c-3.075-1.065-6.059-2.396-8.907-3.977\n                c-1.529-0.851-3.395-0.838-4.914,0.033c-1.52,0.871-2.473,2.473-2.513,4.224c-0.007,0.295-0.007,0.59-0.007,0.889\n                c0,23.935,12.882,45.484,32.577,57.229c-1.692-0.169-3.383-0.414-5.063-0.735c-1.732-0.331-3.513,0.276-4.681,1.597\n                c-1.17,1.32-1.557,3.16-1.018,4.84c7.29,22.76,26.059,39.501,48.749,44.605c-18.819,11.787-40.34,17.961-62.932,17.961\n                c-4.714,0-9.455-0.277-14.095-0.826c-2.305-0.274-4.509,1.087-5.294,3.279c-0.785,2.193,0.047,4.638,2.008,5.895\n                c29.023,18.609,62.582,28.445,97.047,28.445c67.754,0,110.139-31.95,133.764-58.753c29.46-33.421,46.356-77.658,46.356-121.367\n                c0-1.826-0.028-3.67-0.084-5.508c11.623-8.757,21.63-19.355,29.773-31.536c1.237-1.85,1.103-4.295-0.33-5.998\n                C307.394,57.037,305.009,56.486,302.973,57.388z\"\n                />\n            </g>\n        </svg>\n    );\n}\n","import React from 'react';\nimport { IconBehance } from './IconBehance';\nimport { IconExternal } from './IconExternal';\nimport { IconGithub } from './IconGithub';\nimport { IconHashnode } from './IconHashnode';\nimport { IconLinkedIn } from './IconLinkedIn';\nimport { IconMail } from './IconMail';\nimport { IconMedium } from './IconMedium';\nimport { IconTwitter } from './IconTwitter';\n\ninterface IconProps {\n    name: string;\n    color?: string;\n}\n\nexport function Icon(props: IconProps): React.ReactElement | null {\n    switch (props.name.toLowerCase()) {\n        case 'external':\n            return <IconExternal color={props.color} />;\n        case 'behance':\n            return <IconBehance color={props.color} />;\n        case 'github':\n            return <IconGithub color={props.color} />;\n        case 'linkedin':\n            return <IconLinkedIn color={props.color} />;\n        case 'mail':\n            return <IconMail color={props.color} />;\n        case 'medium':\n            return <IconMedium color={props.color} />;\n        case 'twitter':\n            return <IconTwitter color={props.color} />;\n        case 'hashnode':\n            return <IconHashnode color={props.color} />;\n        default:\n            return null;\n    }\n}\n","export const socialProfileLabels = {\n    behance: 'Behance',\n    github: 'GitHub',\n    medium: 'Medium',\n    linkedin: 'LinkedIn',\n    mail: 'Mail',\n    twitter: 'Twitter',\n    hashnode: 'Hashnode',\n};\n","import React from 'react';\nimport { useSiteMetadata } from '../../hooks/useSiteMetadata';\nimport { Icon } from '../Icon';\nimport { Slider } from '../Slider';\nimport { socialProfileLabels } from './configuration';\nimport * as classes from './style.module.css';\n\nexport enum SocialProfile {\n    Behance = 'behance',\n    GitHub = 'github',\n    Medium = 'medium',\n    Mail = 'mail',\n    LinkedIn = 'linkedin',\n    Twitter = 'twitter',\n    Hashnode = 'hashnode',\n}\n\ninterface SocialProfilesProps {\n    from: SocialProfile[];\n    showIcon?: boolean;\n}\n\nexport function SocialProfiles(props: SocialProfilesProps): React.ReactElement {\n    const siteMetadata = useSiteMetadata();\n\n    // Enrich the social profile with data from the display name configuration file\n    // as well as the site metadata from settings.json\n    const shownProfiles = props.from.map((profile) => {\n        const normalizedProfileId = profile.toLowerCase() as SocialProfile;\n        if (Object.values(SocialProfile).includes(normalizedProfileId)) {\n            return {\n                id: normalizedProfileId,\n                label: socialProfileLabels[normalizedProfileId],\n                url: siteMetadata.social[normalizedProfileId],\n            };\n        } else {\n            throw new Error(`Unknown social profile ${profile}.`);\n        }\n    });\n\n    return (\n        <Slider>\n            {shownProfiles.map((profile, key) => {\n                const completeProfileData = profile.label && profile.url;\n                return !completeProfileData ? null : (\n                    <a\n                        key={key}\n                        className={classes.Profile}\n                        href={profile.url}\n                        target=\"_blank\"\n                        rel=\"nofollow noopener noreferrer\"\n                        aria-label={profile.label}\n                        style={props.showIcon ? { padding: '0.5rem 1.25rem' } : undefined}\n                    >\n                        {props.showIcon ? <Icon name={profile.id} /> : undefined} {profile.label}\n                    </a>\n                );\n            })}\n        </Slider>\n    );\n}\n","// extracted by mini-css-extract-plugin\nexport var Profile = \"style-module--Profile--c97ff\";","import React from 'react';\nimport { GatsbyImage } from 'gatsby-plugin-image';\nimport { Animation } from '../../components/Animation';\nimport { useCalendlyWidget } from '../../hooks/useCalendlyWidget';\nimport { Section } from '../../components/Section';\nimport { SocialProfiles } from '../../components/SocialProfiles';\nimport { useLocalDataSource } from './data';\nimport { PageSection } from '../../types';\nimport * as classes from './style.module.css';\n\nexport function HeroSection(props: PageSection): React.ReactElement {\n    const response = useLocalDataSource();\n    const data = response.allHeroJson.sections[0];\n\n    const CalendlyWidget = useCalendlyWidget(data.calendly);\n\n    return (\n        <Animation type=\"fadeUp\" delay={400}>\n            {CalendlyWidget}\n            <Section anchor={props.sectionId} additionalClasses={[classes.HeroContainer]}>\n                {data.heroPhoto?.src && (\n                    <div className={classes.heroImageCont}>\n                        <GatsbyImage\n                            className={classes.heroImage}\n                            image={data.heroPhoto.src.childImageSharp.gatsbyImageData}\n                            alt={data.heroPhoto.alt || `Profile Image`}\n                            loading=\"eager\"\n                        />\n                    </div>\n                )}\n                <div className={classes.Hero}>\n                    <div className={classes.Intro}>\n                        {data.intro && <span className={classes.ImagePrefix}>{data.intro}</span>}\n                        {data.image?.src && (\n                            <Animation className={classes.Image} type=\"waving-hand\" duration={2500} iterationCount={3}>\n                                <GatsbyImage\n                                    image={data.image.src.childImageSharp.gatsbyImageData}\n                                    alt={data.image.alt || `Intro Image`}\n                                    loading=\"eager\"\n                                />\n                            </Animation>\n                        )}\n                    </div>\n                    <h1 className={classes.Title}>{data.title}</h1>\n                    <h2 className={classes.Subtitle}>\n                        {data.subtitle.prefix}\n                        <u>{data.subtitle.highlight}</u>\n                        {data.subtitle.suffix}\n                    </h2>\n                    <p>{data.description}</p>\n                    <Animation type=\"fadeLeft\" delay={600}>\n                        {data.socialProfiles && (\n                            <SocialProfiles from={data.socialProfiles.from} showIcon={data.socialProfiles.showIcons} />\n                        )}\n                    </Animation>\n                </div>\n            </Section>\n        </Animation>\n    );\n}\n","import { graphql, useStaticQuery } from 'gatsby';\nimport { SocialProfile } from '../../components/SocialProfiles';\nimport { ImageObject } from '../../types';\n\ninterface HeroSectionQueryResult {\n    allHeroJson: {\n        sections: {\n            description: string;\n            email: string;\n            image: ImageObject;\n            intro: string;\n            heroPhoto: ImageObject;\n            socialProfiles: {\n                from: SocialProfile[];\n                showIcons: boolean;\n            };\n            calendly: {\n                label: string;\n                username: string;\n                colorText: string;\n                colorButton: string;\n            };\n            subtitle: {\n                highlight: string;\n                prefix: string;\n                suffix: string;\n            };\n            title: string;\n        }[];\n    };\n}\n\nexport const useLocalDataSource = (): HeroSectionQueryResult => {\n    return useStaticQuery(graphql`\n        query HeroSectionQuery {\n            allHeroJson {\n                sections: nodes {\n                    description\n                    heroPhoto {\n                        src {\n                            childImageSharp {\n                                gatsbyImageData(aspectRatio: 1)\n                            }\n                        }\n                        alt\n                    }\n                    image {\n                        alt\n                        src {\n                            childImageSharp {\n                                gatsbyImageData(width: 48, aspectRatio: 1)\n                            }\n                        }\n                    }\n                    intro\n                    socialProfiles {\n                        from\n                        showIcons\n                    }\n                    calendly {\n                        label\n                        username\n                        colorText\n                        colorButton\n                    }\n                    subtitle {\n                        highlight\n                        prefix\n                        suffix\n                    }\n                    title\n                }\n            }\n        }\n    `);\n};\n","import React, { useEffect } from 'react';\nimport { Script } from 'gatsby';\n\ndeclare global {\n    const Calendly:\n        | {\n              initBadgeWidget: (props: unknown) => void;\n          }\n        | undefined;\n}\n\ntype CalendlyWidgetProps = {\n    username?: string;\n    label?: string;\n    colorButton?: string;\n    colorText?: string;\n};\n\nexport const useCalendlyWidget = (options?: CalendlyWidgetProps) => {\n    const useCalendlyIntegration = options?.username;\n\n    useEffect(() => {\n        if (!useCalendlyIntegration) return;\n        setTimeout(() => {\n            Calendly?.initBadgeWidget({\n                url: `https://calendly.com/${options?.username}`,\n                text: options?.label ?? 'Schedule time with me',\n                color: options?.colorButton ?? '#0069ff',\n                textColor: options?.colorText ?? '#ffffff',\n            });\n        }, 1000);\n    }, []);\n\n    return useCalendlyIntegration ? (\n        <>\n            <link href=\"https://assets.calendly.com/assets/external/widget.css\" rel=\"stylesheet\" />\n            <Script\n                id=\"calendlyScript\"\n                src=\"https://assets.calendly.com/assets/external/widget.js\"\n                type=\"text/javascript\"\n                async\n            />\n        </>\n    ) : (\n        <></>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport var Hero = \"style-module--Hero--12fbf\";\nexport var HeroContainer = \"style-module--HeroContainer--061a0\";\nexport var Image = \"style-module--Image--8d569\";\nexport var ImagePrefix = \"style-module--ImagePrefix--6dc4f\";\nexport var Intro = \"style-module--Intro--6a01f\";\nexport var Subtitle = \"style-module--Subtitle--aa123\";\nexport var Title = \"style-module--Title--4f076\";\nexport var heroImage = \"style-module--heroImage--9e361\";\nexport var heroImageCont = \"style-module--heroImageCont--20e7f\";","import React from 'react';\nimport { Animation } from '../../components/Animation';\nimport { Section } from '../../components/Section';\nimport { Slider } from '../../components/Slider';\nimport { ArticleCard, ArticleCardSkeleton } from '../../components/ArticleCard';\nimport { useSiteMetadata } from '../../hooks/useSiteMetadata';\nimport { useLocalDataSource, useMediumFeed } from './data';\nimport { PageSection } from '../../types';\nimport * as classes from './style.module.css';\n\nenum ArticleSource {\n    Medium = 'medium',\n    Blog = 'blog',\n}\n\ninterface ArticleSourceConfiguration {\n    [ArticleSource.Medium]?: {\n        profileUrl: string;\n    };\n    [ArticleSource.Blog]?: {\n        valid: boolean;\n    };\n}\n\ninterface ArticlesSectionProps extends PageSection {\n    sources: ArticleSource[];\n}\n\nexport function ArticlesSection(props: ArticlesSectionProps): React.ReactElement {\n    const response = useLocalDataSource();\n    const [articles, setArticles] = React.useState<ArticleCard[]>([]);\n    const configuration = validateAndConfigureSources(props.sources);\n\n    async function collectArticlesFromSources(configuration: ArticleSourceConfiguration): Promise<ArticleCard[]> {\n        const mediumConfig = configuration[ArticleSource.Medium];\n        const blogConfig = configuration[ArticleSource.Blog];\n        const articleList: ArticleCard[] = [];\n\n        if (mediumConfig !== undefined) {\n            const mediumArticles = await useMediumFeed(mediumConfig.profileUrl);\n            if (mediumArticles.length > 0) {\n                mediumArticles.forEach((article) => {\n                    articleList.push({\n                        category: article.categories[0],\n                        title: article.title,\n                        publishedAt: new Date(article.pubDate.replace(/-/g, '/')), // https://stackoverflow.com/a/5646753\n                        link: article.link,\n                    });\n                });\n            }\n        }\n\n        if (blogConfig !== undefined) {\n            const blogArticles = response.allArticle.articles;\n            if (blogArticles.length > 0) {\n                blogArticles.forEach((article) => {\n                    articleList.push({\n                        category: article.categories[0],\n                        title: article.title,\n                        publishedAt: new Date(article.date.replace(/-/g, '/')),\n                        link: article.slug,\n                        readingTime: article.readingTime.text,\n                    });\n                });\n            }\n        }\n\n        return articleList.slice().sort((a, b) => b.publishedAt.getTime() - a.publishedAt.getTime());\n    }\n\n    React.useEffect(() => {\n        (async function () {\n            setArticles(await collectArticlesFromSources(configuration));\n        })();\n    }, []);\n\n    return (\n        <Animation type=\"fadeUp\" delay={1000}>\n            <Section anchor={props.sectionId} heading={props.heading}>\n                <Slider additionalClasses={[classes.Articles]}>\n                    {articles.length > 0\n                        ? articles.slice(0, 3).map((article, key) => {\n                              return <ArticleCard key={key} data={article} />;\n                          })\n                        : [...Array(3)].map((_, key) => {\n                              return <ArticleCardSkeleton key={key} />;\n                          })}\n                </Slider>\n            </Section>\n        </Animation>\n    );\n}\n\n// validateAndConfigureSources: Sources for articles can be defined as props (e.g. sources=[\"Medium\"])\n// Currently, only Medium can be used as a source but it is thinkable to extend this approach to other\n// sources (e.g. an integrated Markdown blog). To collect all articles from the source, there is a\n// specific configuration needed for each source type. For example, to collect articles from Medium,\n// we need the profile URL. This function is responsible for validating that at least one source is\n// defined. It than adds the needed configuration properties to each source and returns the config.\n\nfunction validateAndConfigureSources(sources: ArticleSource[]): ArticleSourceConfiguration {\n    const configuration: ArticleSourceConfiguration = {};\n\n    if (sources.length > 0) {\n        // Configure Medium\n        if (sources.map((i) => i.toLowerCase()).includes(ArticleSource.Medium)) {\n            const siteMetadata = useSiteMetadata();\n            configuration[ArticleSource.Medium] = { profileUrl: siteMetadata.social.medium };\n        }\n\n        // Configure Blog (actually no real configuration is required yet)\n        if (sources.map((i) => i.toLowerCase()).includes(ArticleSource.Blog)) {\n            configuration[ArticleSource.Blog] = { valid: true };\n        }\n    } else {\n        throw new Error('No Source for Articles defined.');\n    }\n\n    return configuration;\n}\n","import React from 'react';\nimport { GatsbyImage } from 'gatsby-plugin-image';\nimport { Animation } from '../../components/Animation';\nimport { Section } from '../../components/Section';\nimport { useLocalDataSource } from './data';\nimport { PageSection } from '../../types';\nimport * as classes from './style.module.css';\n\nexport function AboutSection(props: PageSection): React.ReactElement {\n    const response = useLocalDataSource();\n    const data = response.allAboutMarkdown.sections[0];\n\n    return (\n        <Animation type=\"fadeUp\">\n            <Section anchor={props.sectionId} heading={props.heading}>\n                <div className={classes.About}>\n                    <div className={classes.Description} dangerouslySetInnerHTML={{ __html: data.html }} />\n                    <Animation type=\"fadeLeft\" delay={200}>\n                        <div className={classes.ImageWrapper}>\n                            <GatsbyImage\n                                image={data.frontmatter.imageSrc.childImageSharp.gatsbyImageData}\n                                className={classes.Image}\n                                alt={data.frontmatter.imageAlt || `About Image`}\n                            />\n                        </div>\n                    </Animation>\n                </div>\n            </Section>\n        </Animation>\n    );\n}\n","import { graphql, useStaticQuery } from 'gatsby';\nimport { IGatsbyImageData } from 'gatsby-plugin-image';\n\ninterface AboutSectionQueryResult {\n    allAboutMarkdown: {\n        sections: {\n            frontmatter: {\n                imageAlt: string;\n                imageSrc: {\n                    childImageSharp: {\n                        gatsbyImageData: IGatsbyImageData;\n                    };\n                };\n            };\n            html: string;\n        }[];\n    };\n}\n\nexport const useLocalDataSource = (): AboutSectionQueryResult => {\n    return useStaticQuery(graphql`\n        query AboutSectionQuery {\n            allAboutMarkdown: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/sections/about/\" } }) {\n                sections: nodes {\n                    frontmatter {\n                        imageAlt\n                        imageSrc {\n                            childImageSharp {\n                                gatsbyImageData(width: 400)\n                            }\n                        }\n                    }\n                    html\n                }\n            }\n        }\n    `);\n};\n","// extracted by mini-css-extract-plugin\nexport var About = \"style-module--About--0f660\";\nexport var Description = \"style-module--Description--2e019\";\nexport var Image = \"style-module--Image--57f3b\";\nexport var ImageWrapper = \"style-module--ImageWrapper--a41ba\";","import React from 'react';\nimport { Animation } from '../../components/Animation';\nimport { Section } from '../../components/Section';\nimport { GatsbyImage } from 'gatsby-plugin-image';\nimport { Button, ButtonType } from '../../components/Button';\nimport { PageSection } from '../../types';\nimport { useLocalDataSource } from './data';\nimport * as classes from './style.module.css';\n\nexport function InterestsSection(props: PageSection): React.ReactElement {\n    const response = useLocalDataSource();\n    const data = response.allInterestsJson.sections[0];\n    const shouldShowButton = data.button.visible !== false;\n    const initiallyShownInterests = data.button.initiallyShownInterests ?? 5;\n    const [shownInterests, setShownInterests] = React.useState<number>(\n        shouldShowButton ? initiallyShownInterests : data.interests.length,\n    );\n\n    function loadMoreHandler() {\n        setShownInterests(data.interests.length);\n    }\n\n    return (\n        <Animation type=\"fadeUp\">\n            <Section anchor={props.sectionId} heading={props.heading}>\n                <div className={classes.Interests}>\n                    {data.interests.slice(0, shownInterests).map((interest, key) => {\n                        return (\n                            <Animation key={key} className={classes.Interest} type=\"scaleIn\" delay={key * 100}>\n                                {interest.image.src && (\n                                    <GatsbyImage\n                                        image={interest.image.src.childImageSharp.gatsbyImageData}\n                                        className={classes.Icon}\n                                        alt={interest.image.alt || `Interest ${interest.label}`}\n                                    />\n                                )}{' '}\n                                {interest.label}\n                            </Animation>\n                        );\n                    })}\n                    {shouldShowButton && shownInterests < data.interests.length && (\n                        <Animation type=\"scaleIn\" delay={(shownInterests + 1) * 100}>\n                            <Button\n                                type={ButtonType.BUTTON}\n                                onClickHandler={loadMoreHandler}\n                                label={data.button.label}\n                            />\n                        </Animation>\n                    )}\n                </div>\n            </Section>\n        </Animation>\n    );\n}\n","import { graphql, useStaticQuery } from 'gatsby';\nimport { ImageObject } from '../../types';\n\ninterface InterestsSectionQueryResult {\n    allInterestsJson: {\n        sections: {\n            button: {\n                initiallyShownInterests: number;\n                label: string;\n                visible: boolean;\n            };\n            interests: {\n                image: ImageObject;\n                label: string;\n            }[];\n        }[];\n    };\n}\n\nexport const useLocalDataSource = (): InterestsSectionQueryResult => {\n    return useStaticQuery(graphql`\n        query InterestsSectionQuery {\n            allInterestsJson {\n                sections: nodes {\n                    button {\n                        initiallyShownInterests\n                        label\n                        visible\n                    }\n                    interests {\n                        image {\n                            alt\n                            src {\n                                childImageSharp {\n                                    gatsbyImageData(width: 20, height: 20)\n                                }\n                            }\n                        }\n                        label\n                    }\n                }\n            }\n        }\n    `);\n};\n","// extracted by mini-css-extract-plugin\nexport var Icon = \"style-module--Icon--4b6f8\";\nexport var Interest = \"style-module--Interest--4bfd4\";\nexport var Interests = \"style-module--Interests--3d3b3\";","import React from 'react';\nimport { GatsbyImage } from 'gatsby-plugin-image';\nimport { Animation } from '../Animation';\nimport { useMediaQuery } from '../../hooks/useMediaQuery';\nimport { Icon } from '../Icon';\nimport { ImageObject } from '../../types';\nimport * as classes from './style.module.css';\n\nenum LinkType {\n    External = 'external',\n    Github = 'github',\n}\n\nexport interface Project {\n    category?: string;\n    title: string;\n    description: string;\n    image: ImageObject & { linkTo?: string };\n    tags?: string[];\n    links?: {\n        type: LinkType;\n        url: string;\n    }[];\n    visible: boolean;\n}\n\ninterface ProjectProps {\n    data: Project;\n    index: number;\n}\n\nexport function Project(props: ProjectProps): React.ReactElement {\n    const isDesktopBreakpoint = useMediaQuery('(min-width: 992px)');\n\n    return (\n        <Animation\n            type=\"fadeUp\"\n            className={classes.Project}\n            style={{\n                flexDirection: isDesktopBreakpoint && props.index % 2 === 0 ? 'row-reverse' : undefined,\n            }}\n        >\n            <div className={classes.Details}>\n                <span className={classes.Category}>{props.data.category}</span>\n                <h4 className={classes.Title}>{props.data.title}</h4>\n                <p>{props.data.description}</p>\n                <div className={classes.Tags}>\n                    {props.data.tags &&\n                        props.data.tags.length !== 0 &&\n                        props.data.tags.map((tag, key) => {\n                            return (\n                                <span key={key}>\n                                    <u>{tag}</u>\n                                </span>\n                            );\n                        })}\n                </div>\n                <div className={classes.Links}>\n                    {props.data.links &&\n                        props.data.links.length !== 0 &&\n                        props.data.links.map((link, key) => {\n                            return (\n                                <a\n                                    key={key}\n                                    href={link.url}\n                                    target=\"_blank\"\n                                    rel=\"nofollow noopener noreferrer\"\n                                    aria-label=\"External Link\"\n                                >\n                                    <Icon name={link.type} color=\"var(--subtext-color)\" />\n                                </a>\n                            );\n                        })}\n                </div>\n            </div>\n            {props.data.image.src && props.data.image.linkTo && (\n                <a href={props.data.image.linkTo} target=\"_blank\" rel=\"noopener noreferrer\" aria-label=\"External Link\">\n                    <GatsbyImage\n                        className={classes.ProjectImageWrapper}\n                        imgClassName={classes.ProjectImage}\n                        image={props.data.image.src.childImageSharp.gatsbyImageData}\n                        alt={props.data.image.alt || `Project ${props.data.title}`}\n                    />\n                </a>\n            )}\n            {props.data.image.src && !props.data.image.linkTo && (\n                <GatsbyImage\n                    className={classes.ProjectImageWrapper}\n                    imgClassName={classes.ProjectImage}\n                    image={props.data.image.src.childImageSharp.gatsbyImageData}\n                    alt={props.data.image.alt || `Project ${props.data.title}`}\n                />\n            )}\n        </Animation>\n    );\n}\n","// extracted by mini-css-extract-plugin\nexport var Category = \"style-module--Category--f3034\";\nexport var Details = \"style-module--Details--f22f0\";\nexport var Links = \"style-module--Links--7602a\";\nexport var Project = \"style-module--Project--6d27a\";\nexport var ProjectImage = \"style-module--ProjectImage--8eee9\";\nexport var ProjectImageWrapper = \"style-module--ProjectImageWrapper--668f6\";\nexport var Tags = \"style-module--Tags--d7936\";\nexport var Title = \"style-module--Title--8501a\";","import React from 'react';\nimport { Animation } from '../../components/Animation';\nimport { Section } from '../../components/Section';\nimport { Slider } from '../../components/Slider';\nimport { Button, ButtonType } from '../../components/Button';\nimport { Project } from '../../components/Project';\nimport { PageSection } from '../../types';\nimport { useLocalDataSource } from './data';\nimport * as classes from './style.module.css';\n\nexport function ProjectsSection(props: PageSection): React.ReactElement {\n    const response = useLocalDataSource();\n    const data = response.allProjectsJson.sections[0];\n\n    return (\n        <Animation type=\"fadeIn\">\n            <Section anchor={props.sectionId} heading={props.heading}>\n                <Slider additionalClasses={[classes.Projects]}>\n                    {data.projects.map((project, key) => {\n                        return project.visible ? <Project key={key} index={key} data={project} /> : null;\n                    })}\n                </Slider>\n                {data.button !== undefined && data.button.visible !== false && (\n                    <Animation className={classes.MoreProjects} type=\"fadeIn\">\n                        <Button\n                            type={ButtonType.LINK}\n                            externalLink={true}\n                            url={data.button.url}\n                            label={data.button.label}\n                        />\n                    </Animation>\n                )}\n            </Section>\n        </Animation>\n    );\n}\n","import { graphql, useStaticQuery } from 'gatsby';\nimport { Project } from '../../components/Project';\n\ninterface ProjectsSectionQueryResult {\n    allProjectsJson: {\n        sections: {\n            button: {\n                label: string;\n                url: string;\n                visible: boolean;\n            };\n            projects: Project[];\n        }[];\n    };\n}\n\nexport const useLocalDataSource = (): ProjectsSectionQueryResult => {\n    return useStaticQuery(graphql`\n        query ProjectsSectionQuery {\n            allProjectsJson {\n                sections: nodes {\n                    button {\n                        label\n                        url\n                        visible\n                    }\n                    projects {\n                        category\n                        description\n                        image {\n                            alt\n                            linkTo\n                            src {\n                                childImageSharp {\n                                    gatsbyImageData(width: 400)\n                                }\n                            }\n                        }\n                        links {\n                            type\n                            url\n                        }\n                        tags\n                        title\n                        visible\n                    }\n                }\n            }\n        }\n    `);\n};\n","// extracted by mini-css-extract-plugin\nexport var MoreProjects = \"style-module--MoreProjects--06375\";\nexport var Projects = \"style-module--Projects--a4194\";","import React from 'react';\nimport { GatsbyImage } from 'gatsby-plugin-image';\nimport { Animation } from '../../components/Animation';\nimport { Section } from '../../components/Section';\nimport { SocialProfiles } from '../../components/SocialProfiles';\nimport { useLocalDataSource } from './data';\nimport { PageSection } from '../../types';\nimport * as classes from './style.module.css';\n\nexport function ContactSection(props: PageSection): React.ReactElement {\n    const response = useLocalDataSource();\n    const data = response.allContactJson.sections[0];\n\n    return (\n        <Animation type=\"fadeUp\">\n            <Section anchor={props.sectionId} heading={props.heading} additionalClasses={[classes.Contact]}>\n                {data.description && <p className={classes.Description}>{data.description}</p>}\n                <div className={classes.Profile}>\n                    {data.image.src && (\n                        <GatsbyImage\n                            className={classes.Avatar}\n                            image={data.image.src.childImageSharp.gatsbyImageData}\n                            alt={data.image.alt || `Profile ${data.name}`}\n                        />\n                    )}\n                    <div className={classes.ContactDetails}>\n                        <div className={classes.Name}>{data.name}</div>\n                        <u>\n                            <a href={`mailto:${data.email}`}>{data.email}</a>\n                        </u>\n                    </div>\n                </div>\n                {data.socialProfiles && (\n                    <SocialProfiles from={data.socialProfiles.from} showIcon={data.socialProfiles.showIcons} />\n                )}\n            </Section>\n        </Animation>\n    );\n}\n","import { graphql, useStaticQuery } from 'gatsby';\nimport { SocialProfile } from '../../components/SocialProfiles';\nimport { ImageObject } from '../../types';\n\ninterface ContactSectionQueryResult {\n    allContactJson: {\n        sections: {\n            description: string;\n            email: string;\n            image: ImageObject;\n            name: string;\n            socialProfiles: {\n                from: SocialProfile[];\n                showIcons: boolean;\n            };\n        }[];\n    };\n}\n\nexport const useLocalDataSource = (): ContactSectionQueryResult => {\n    return useStaticQuery(graphql`\n        query ContactSectionQuery {\n            allContactJson {\n                sections: nodes {\n                    description\n                    email\n                    image {\n                        alt\n                        src {\n                            childImageSharp {\n                                gatsbyImageData(width: 140)\n                            }\n                        }\n                    }\n                    name\n                    socialProfiles {\n                        from\n                        showIcons\n                    }\n                }\n            }\n        }\n    `);\n};\n","// extracted by mini-css-extract-plugin\nexport var Avatar = \"style-module--Avatar--fda4c\";\nexport var Contact = \"style-module--Contact--1c6f8\";\nexport var ContactDetails = \"style-module--ContactDetails--70da4\";\nexport var Description = \"style-module--Description--87aea\";\nexport var Name = \"style-module--Name--8248f\";\nexport var Profile = \"style-module--Profile--3b0af\";","import React from 'react';\nimport { Section } from '../../components/Section';\nimport { PageSection } from '../../types';\nimport { getSectionBySectionId, useLocalDataSource } from './data';\n\nexport function LegalSection(props: PageSection): React.ReactElement {\n    const response = useLocalDataSource();\n    const data = getSectionBySectionId(response, props.sectionId);\n\n    return (\n        <Section anchor={props.sectionId} heading={props.heading}>\n            <div dangerouslySetInnerHTML={{ __html: data.html }} />\n        </Section>\n    );\n}\n","import { graphql, useStaticQuery } from 'gatsby';\n\ninterface LegalSection {\n    html: string;\n    frontmatter: {\n        sectionId: string;\n    };\n}\n\nexport interface LegalSectionQueryResult {\n    allLegalSection: {\n        sections: LegalSection[];\n    };\n}\n\nexport const useLocalDataSource = (): LegalSectionQueryResult => {\n    return useStaticQuery(graphql`\n        query LegalSectionQuery {\n            allLegalSection: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/sections/legal/\" } }) {\n                sections: nodes {\n                    html\n                    frontmatter {\n                        sectionId\n                    }\n                }\n            }\n        }\n    `);\n};\n\nexport const getSectionBySectionId = (res: LegalSectionQueryResult, id: string): LegalSection => {\n    const sectionList = res.allLegalSection.sections.filter((section) => section.frontmatter.sectionId === id);\n    if (sectionList.length === 0) {\n        throw new Error(`Could not find section ${id} by id.`);\n    } else if (sectionList.length > 1) {\n        throw new Error(`Found section ${id} multiple times. Make sure the id is unique.`);\n    } else {\n        return sectionList[0];\n    }\n};\n"],"names":["IconBehance","props","React","version","role","fill","color","xmlns","x","y","width","height","viewBox","id","d","IconExternal","IconGithub","IconHashnode","focusable","IconLinkedIn","IconMail","IconMedium","IconTwitter","Icon","name","toLowerCase","socialProfileLabels","behance","github","medium","linkedin","mail","twitter","hashnode","SocialProfile","SocialProfiles","siteMetadata","useSiteMetadata","shownProfiles","from","map","profile","normalizedProfileId","Object","values","includes","label","url","social","Error","Slider","key","className","href","target","rel","style","showIcon","padding","undefined","HeroSection","data","useStaticQuery","allHeroJson","sections","CalendlyWidget","options","useCalendlyIntegration","username","useEffect","setTimeout","Calendly","_Calendly","initBadgeWidget","text","colorButton","textColor","colorText","Script","src","type","async","useCalendlyWidget","calendly","Animation","delay","Section","anchor","sectionId","additionalClasses","heroPhoto","_data$heroPhoto","GatsbyImage","image","childImageSharp","gatsbyImageData","alt","loading","intro","_data$image","duration","iterationCount","title","subtitle","prefix","highlight","suffix","description","socialProfiles","showIcons","ArticleSource","AboutSection","allAboutMarkdown","heading","dangerouslySetInnerHTML","__html","html","frontmatter","imageSrc","imageAlt","InterestsSection","allInterestsJson","shouldShowButton","button","visible","initiallyShownInterests","shownInterests","setShownInterests","interests","length","slice","interest","Button","ButtonType","onClickHandler","LinkType","ProjectImage","ProjectImageWrapper","Project","isDesktopBreakpoint","useMediaQuery","flexDirection","index","category","tags","tag","links","link","linkTo","classes","imgClassName","ProjectsSection","allProjectsJson","projects","project","externalLink","ContactSection","allContactJson","email","LegalSection","res","sectionList","allLegalSection","filter","section","getSectionBySectionId"],"sourceRoot":""}